import React, { useState, useEffect, useContext } from 'react';
import { Redirect } from 'react-router-dom';
import { pathOr } from 'ramda';

import useFetch from 'hooks/useFetch';
import { ArticleForm } from 'components/article-form';
import { Loading } from 'components/loading';
import { CurrentUserContext } from 'contexts/currentUser';

export const EditArticle = ({ match }) => {
  const slug = pathOr('', ['params', 'slug'], match);
  const apiUrl = `/articles/${slug}`;
  const [{response: fetchArticleResponse, error: fetchArticleError, isLoading: isFetchLoading}, doFetchArticle] = useFetch(apiUrl);
  const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl);
  const [initialValues, setInitialValues] = useState(null); 
  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(null);
  const [user] = useContext(CurrentUserContext);
  
  useEffect(() => {
    doFetchArticle();
  }, [doFetchArticle]);

  useEffect(() => {
    if (!fetchArticleResponse) {
      return;
    }

    setInitialValues({
      title: fetchArticleResponse.article.title,
      description: fetchArticleResponse.article.description,
      body: fetchArticleResponse.article.body,
      tagList: fetchArticleResponse.article.tagList,
    });
  }, [fetchArticleResponse]);

  useEffect(() => {
    if (!updateArticleResponse) {
      return;
    }

    setIsSuccessfullSubmit(true);
  }, [updateArticleResponse])

  const handleSubmit = article => {
    doUpdateArticle({
      method: 'put',
      data: {
        article,
      }
    });
  }

  if (isFetchLoading) {
    return <Loading />
  }

  if ([
    isSuccessfullSubmit,
    user.isLoading !== null && user.isLoggedIn === false
  ].some(Boolean)) {
    return <Redirect to={`/articles/${slug}`} />;
  }

  return (
    <div>
      <ArticleForm
        errors={(
          (fetchArticleError && fetchArticleError.errors) || 
          (updateArticleError && updateArticleError.errors) || {})}
        initialValues={initialValues}
        onSubmit={handleSubmit} 
      />
    </div>
  );
}
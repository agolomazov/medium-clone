import React, { useEffect, useContext, useState } from 'react';

import useFetch from 'hooks/useFetch';
import { CurrentUserContext } from 'contexts/currentUser';
import { BackendErrorMessages } from 'components/backend-error-messages';

export const Settings = () => {
  const [currentUserState] = useContext(CurrentUserContext);
  const apiUrl = `/user`;

  const [image, setImage] = useState('');
  const [username, setUsername] = useState('');
  const [bio, setBio] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const [{response, error}, doFetch] = useFetch(apiUrl);

  const handleSubmit = event => {
    event.preventDefault();
    console.log('submit');
  }

  const logout = () => {
    console.log('logout');
  }

  return (
    <div className="settings-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">
              Your settings
            </h1>
            { error &&  <BackendErrorMessages backendErrors={error.errors} />}
            <form onSubmit={handleSubmit}>
              <fieldset className="form-group">
                <input
                  type="text"
                  className='form-control form-control-lg'
                  placeholder='URL of profile picture'
                  value={image}
                  onChange={ev => setImage(ev.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <input
                  type="text"
                  className='form-control form-control-lg'
                  placeholder='Username'
                  value={username}
                  onChange={ev => setImage(ev.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <textarea 
                  rows="8"
                  className='form-control form-control-lg'
                  placeholder='Short biography'
                  value={bio}
                  onChange={ev => setBio(ev.target.value)}
                ></textarea>
              </fieldset>
              <fieldset className="form-group">
                <input
                  type="text"
                  className='form-control form-control-lg'
                  placeholder='Email'
                  onChange={ev => setEmail(ev.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <input
                  type="password"
                  className='form-control form-control-lg'
                  placeholder='Password'
                  value={password}
                  onChange={ev => setPassword(ev.target.value)}
                />
              </fieldset>
              <button type="submit" className='btn btn-lg  btn-primary btn-xs-right'>
                Update settings
              </button>
            </form>
            <hr/>
            <button 
              className="btn btn-outline-danger"
              onClick={logout}
            >
              Or click here to logout
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
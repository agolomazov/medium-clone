import React, { useEffect, useContext } from 'react';

import useFetch from 'hooks/useFetch';
import useSessionStorage from 'hooks/useSessionStorage';
import { CurrentUserContext } from 'contexts/currentUser';

export const CurrentUserChecker = ({ children }) => {
  const [{response}, doFetch] = useFetch('/user');
  const [, dispatch] = useContext(CurrentUserContext);
  const [token] = useSessionStorage('token');

  useEffect(() => {
    if (!token) {
      dispatch({ type: 'SET_UNAUTHORIZED' });
      return;
    }

    doFetch();
    dispatch({ type: 'LOADING' });
  }, [token, dispatch, doFetch]);

  useEffect(() => {
    if (response) {
      dispatch({ type: 'SET_AUTHORIZED', payload: response.user });
    }
  }, [response, dispatch]);

  return (
    <>
      {children}
    </>
  );
}